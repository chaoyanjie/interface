<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.web"/>


    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
    </mvc:annotation-driven>

    <bean id="contentNegotiationManager"
          class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="true"/>
        <property name="favorParameter" value="true"/>
        <property name="mediaTypes">
            <value>
                json=application/json
                xml=application/xml
            </value>
        </property>
    </bean>

    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="contentNegotiationManager" ref="contentNegotiationManager"/>
        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
            </list>
        </property>
    </bean>
    
    <bean id="velocityConfig"
        class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath" value="/views/" />
        <property name="configLocation" value="/WEB-INF/classes/velocity.properties" />
        <!-- 这里太有意思了，因为什么不知道，但要重新再设一下input.encoding就行了 -->
         <property name="velocityProperties">    
         <props>    
             <prop  key="input.encoding">UTF-8</prop>    
             <prop  key="output.encoding">UTF-8</prop>      
          </props>    
      </property>          
    </bean>
    
    
  
    <!-- 配置视图的显示 -->  
    <bean id="ViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">  
        <property name="prefix" value="/" /><!-- 视图文件的前缀，即存放的路径 -->  
        <property name="suffix" value=".vm" /><!-- 视图文件的后缀名 -->  
        <property name="dateToolAttribute" value="date" /><!--日期函数名称-->  
        <property name="numberToolAttribute" value="number" /><!--数字函数名称-->  
        <property name="contentType" value="text/html;charset=UTF-8" />  
        <property name="exposeSpringMacroHelpers" value="true" /><!--是否使用spring对宏定义的支持-->  
        <property name="exposeRequestAttributes" value="true" /><!--是否开放request属性-->  
        <property name="requestContextAttribute" value="rc"/><!--request属性引用名称-->  
        <property name="layoutUrl" value="layout/default.vm"/><!--指定layout文件-->  
    </bean>  
    
<!-- 
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
 -->
 
    <!--  	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> -->
    <!-- 		<property name="messageConverters"> -->
    <!-- 			<list> -->
    <!-- 				<ref bean="jsonConverter" /> -->
    <!-- 			</list> -->
    <!-- 		</property> -->
    <!-- 	</bean> -->
    <!-- 	<bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"> -->
    <!-- 		<property name="supportedMediaTypes" value="application/json" /> -->
    <!-- 	</bean>  -->

    <!-- 	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
    <!-- 		<property name="viewClass" -->
    <!-- 			value="org.springframework.web.servlet.view.JstlView" /> -->
    <!-- 		<property name="prefix" value="/view/" /> -->
    <!-- 		<property name="suffix" value=".jsp" /> -->
    <!-- 	</bean> -->

    <!--&lt;!&ndash; javamelody  &ndash;&gt;-->
    <!--<bean id="facadeMonitoringAdvisor" class="net.bull.javamelody.MonitoringSpringAdvisor">-->
    <!--<property name="pointcut">-->
    <!--<bean class="org.springframework.aop.support.JdkRegexpMethodPointcut">-->
    <!--<property name="patterns">-->
    <!--<array>-->
    <!--<value>com\.happigo\.rest\..*</value>-->
    <!--</array>-->
    <!--</property>-->
    <!--</bean>-->
    <!--</property>-->
    <!--</bean>-->
    <!---->
    <!--
    <bean id="methodInvocationInterceptor" class="com.happigo.common.interceptor.MethodInvocationInterceptor" />
    <aop:config proxy-target-class="true">
        <aop:advisor advice-ref="methodInvocationInterceptor" pointcut="execution(public * com.happigo.rest.web..*(..))"/>
    </aop:config>
     -->
   	<mvc:interceptors>  
    		<bean class="com.model.common.interceptor.PropInterceptor" />
    </mvc:interceptors>
   <!--   <mvc:interceptors>
        <bean class="com.happigo.rest.interceptor.LoginInterceptor"/>
    </mvc:interceptors>-->

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设置上传文件的最大尺寸为50MB -->
        <property name="maxUploadSize">
            <!--<value>52428800</value>-->
            <value>20971520</value>
            <!--20M-->
        </property>
    </bean>

</beans>